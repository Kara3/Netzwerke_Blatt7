<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertFalse</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>122</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckBerlin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>136</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>9</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>122</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckOsnabrueck</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>136</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>6</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>113</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>120</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>141</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>148</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckSchwerin</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>155</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>12</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>121</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>128</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>142</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createGameBoardSpotCheckWuerzburg</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>149</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createNewPlayer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>15</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createNewPlayer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>15</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>16</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>16</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>16</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameFactoryTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest</mutatedClass><mutatedMethod>createPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>16</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getActualPlants</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getCitySpecifications</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>174</index><block>19</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getCitySpecifications to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getFuturePlants</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>5</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getInitialElectro</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>3</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPlantSpecifications</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>174</index><block>18</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getPlantSpecifications to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPlayerColors</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>12</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getPlayerColors to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPlayersEndgameCities</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>16</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getPlayersEndgameCities to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPlayersLevel2Cities</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>15</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getPlayersLevel2Cities to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPlayersMaximum</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPlayersMinimum</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPlayersPlantsInitiallyRemoved</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>13</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getPlayersPlantsInitiallyRemoved to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPlayersPlantsLimit</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>14</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getPlayersPlantsLimit to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getPoweredCitiesIncome</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>111</index><block>11</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getPoweredCitiesIncome to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getRegionsUsed</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>17</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getRegionsUsed to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getResourceAvailableToCost</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>7</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getResourceAvailableToCost to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getResourcePlayersToSupply</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>10</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getResourcePlayersToSupply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getResourceToNumber</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>6</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getResourceToNumber to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>getResourcesInitiallyAvailable</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>8</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::getResourcesInitiallyAvailable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$0</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>27</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$0</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$0</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$1</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$1</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>25</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$1</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>26</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$1</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>26</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$1</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourceAvailableToCost$1</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>26</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourcePlayersToSupply$2</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>23</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourcePlayersToSupply$2</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>23</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourcePlayersToSupply$3</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>22</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::lambda$getResourcePlayersToSupply$3 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>lambda$getResourcePlayersToSupply$4</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>21</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::lambda$getResourcePlayersToSupply$4 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>levelToCityCost</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>9</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::levelToCityCost to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EditionGermany.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.EditionGermany</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>20</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/EditionGermany::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeBoardConnectCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>14</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeBoardTwice</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>19</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeBoardTwice</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>19</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeCityWithConnections</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>6</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeCityWithConnections</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>7</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeCityWithoutConnections</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>4</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegions</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>10</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::closeRegions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegions</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>10</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsAfterClose</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>9</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsAfterClose</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>9</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::closeRegions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsMultipleRemainingCities</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>13</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::closeRegions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsMultipleRemainingCities</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>13</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsNegative</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>16</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::closeRegions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsRemainingCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>12</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::closeRegions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsRemainingCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>12</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsThenNoCitiesLeft</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>11</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::closeRegions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsThenNoCitiesLeft</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsTwice</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>18</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsTwice</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>18</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::closeRegions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closeRegionsZero</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>17</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::closeRegions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closedAfterClosed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>8</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>closedAfterClosed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>8</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>findCityContainedInSet</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>3</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>findCityEmptySet</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>findCityNotContainedInSet</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>fourCitiesConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><block>15</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>fourCitiesConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>15</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>fourCitiesConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>15</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>fourCitiesConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>15</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>fourCitiesConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>15</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>fourCitiesConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>130</index><block>15</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoardTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoardTest</mutatedClass><mutatedMethod>fourCitiesConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>138</index><block>15</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testClose</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>17</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testClose</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>17</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectClosed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>6</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectClosed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>6</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectNegativeRegon</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>11</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectNull</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>8</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectSameCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>9</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectTwice</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>7</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectTwice</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectionsCloseAndConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>15</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectionsCloseAndConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>15</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testConnectionsCloseAndConnect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>15</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnections</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>12</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnections</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>12</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnections</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>12</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnections</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>12</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnectionsAlreadyConnected</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>16</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnectionsAlreadyConnected</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>16</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnectionsAlreadyConnected</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>16</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnectionsAndClose</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>14</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnectionsAndClose</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>14</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetConnectionsAndClose</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetName</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>3</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testGetRegion</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testNotEquals</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>10</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testNotEquals</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>10</block><killingTest/><description>removed call to org/junit/Assert::assertFalse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameCityTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCityTest</mutatedClass><mutatedMethod>testcloseNewCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>13</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>getCitiesNotNull</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>14</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>getPlantsNotNull</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>15</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testChangeElectroPassed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>7</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Player::setPassed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testChangeElectroPassed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>7</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Player::setElectro</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testGetColor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>12</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testHasSecret</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>9</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testHasSecret</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>9</block><killingTest/><description>removed call to org/junit/Assert::assertFalse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testHasSecret</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>9</block><killingTest/><description>removed call to org/junit/Assert::assertFalse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testNegativeElectro</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>6</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Player::setElectro</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testSecretOnlyOnce</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertNull</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testSetElectro</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>10</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Player::setElectro</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testSetElectro</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>10</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Player::setElectro</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testSetElectro</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>10</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testSetElectro</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>10</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testSetPassed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>11</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Player::setPassed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayerTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayerTest</mutatedClass><mutatedMethod>testSetPassed</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>11</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>104</index><block>10</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>11</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>11</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>11</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>9</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><block>10</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>154</index><block>13</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameFactory::newBoard to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><block>11</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Board;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>138</index><block>11</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::connect</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newCity</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ledu/hm/cs/rs/powergrid/datastore/City;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createCity(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameFactory::newCity to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newGame</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/Game;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>14</block><killingTest/><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameFactory::newGame to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>(ILedu/hm/cs/rs/powergrid/datastore/Plant$Type;II)Ledu/hm/cs/rs/powergrid/datastore/Plant;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>3</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createPlant(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameFactory::newPlant to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newPlantMarket</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/PlantMarket;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>4</block><killingTest/><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameFactory::newPlantMarket to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newPlayer</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ledu/hm/cs/rs/powergrid/datastore/Player;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createNewPlayer(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameFactory::newPlayer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameFactory.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameFactory</mutatedClass><mutatedMethod>newResourceMarket</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/Edition;)Ledu/hm/cs/rs/powergrid/datastore/ResourceMarket;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>5</block><killingTest/><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameFactory::newResourceMarket to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;I)V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>2</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;I)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>0</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;I)V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>2</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>19</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>21</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>connect</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/datastore/City;I)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>connect</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/datastore/City;I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>connect</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/datastore/City;I)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>9</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>connect</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/datastore/City;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>11</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>connect</mutatedMethod><methodDescription>(Ledu/hm/cs/rs/powergrid/datastore/City;I)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>13</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>getConnections</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>getConnections</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>18</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameCity::getConnections to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameCity::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GameCity.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameCity</mutatedClass><mutatedMethod>getRegion</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>0</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createNewPlayer(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>2</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createNewPlayer(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>getCities</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>6</block><killingTest/><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GamePlayer::getCities to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>getColor</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>5</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createNewPlayer(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GamePlayer::getColor to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>getElectro</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>getPlants</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest/><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GamePlayer::getPlants to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>getSecret</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>17</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createNewPlayer(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>getSecret</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>19</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createNewPlayer(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GamePlayer::getSecret to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>hasPassed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>hasSecret</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>hasSecret</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>22</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>setElectro</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>setElectro</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlayer.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlayer</mutatedClass><mutatedMethod>setElectro</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>assertValid</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><block>12</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$0</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$0</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$0</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>24</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$1</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$1</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$2</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>16</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$2</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$2</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$3</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$3</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edition.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.Edition</mutatedClass><mutatedMethod>lambda$assertValid$3</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>15</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILedu/hm/cs/rs/powergrid/datastore/Plant$Type;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILedu/hm/cs/rs/powergrid/datastore/Plant$Type;II)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILedu/hm/cs/rs/powergrid/datastore/Plant$Type;II)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILedu/hm/cs/rs/powergrid/datastore/Plant$Type;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>0</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createPlant(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILedu/hm/cs/rs/powergrid/datastore/Plant$Type;II)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>2</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createPlant(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILedu/hm/cs/rs/powergrid/datastore/Plant$Type;II)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>4</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createPlant(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>getCities</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createPlant(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>getNumber</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createPlant(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>getNumberOfResources</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createPlant(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>getType</mutatedMethod><methodDescription>()Ledu/hm/cs/rs/powergrid/datastore/Plant$Type;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createPlant(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GamePlant::getType to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlant.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlant</mutatedClass><mutatedMethod>hasOperated</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>setOperatedFalse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertFalse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>setOperatedTrue</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Plant::setOperated</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>setOperatedTrue</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>3</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>testMutationZero</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertFalse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>testMutationZero</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>testMutationZero</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GamePlantTest.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GamePlantTest</mutatedClass><mutatedMethod>testMutationZero</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>8</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>19</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/City::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>closeRegions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>closeRegions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>closeRegions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>closeRegions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>closeRegions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>findCity</mutatedMethod><methodDescription>(Ljava/lang/String;)Ledu/hm/cs/rs/powergrid/datastore/City;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>10</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>findCity</mutatedMethod><methodDescription>(Ljava/lang/String;)Ledu/hm/cs/rs/powergrid/datastore/City;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>12</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameBoard::findCity to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>getCities</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>13</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GameBoard.java</sourceFile><mutatedClass>edu.hm.karius.tobias.powergrid.datastore.GameBoard</mutatedClass><mutatedMethod>getCities</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>15</block><killingTest>edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest.createGameBoardSpotCheckOsnabrueck(edu.hm.karius.tobias.powergrid.datastore.GameFactoryTest)</killingTest><description>mutated return of Object value for edu/hm/karius/tobias/powergrid/datastore/GameBoard::getCities to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke2Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke2Test</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke2Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke2Test</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke2Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke2Test</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke2Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke2Test</mutatedClass><mutatedMethod>newPlant</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke2Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke2Test</mutatedClass><mutatedMethod>newPlayer</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertTrue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke1Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke1Test</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>2</block><killingTest/><description>removed call to edu/hm/cs/rs/powergrid/datastore/Board::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke1Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke1Test</mutatedClass><mutatedMethod>newBoard</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke1Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke1Test</mutatedClass><mutatedMethod>newCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Smoke1Test.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Smoke1Test</mutatedClass><mutatedMethod>newCity</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Factory.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Factory</mutatedClass><mutatedMethod>newFactory</mutatedMethod><methodDescription>()Ledu/hm/cs/rs/powergrid/datastore/Factory;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>0</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/datastore/Factory::newFactory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Factory.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Factory</mutatedClass><mutatedMethod>newFactory</mutatedMethod><methodDescription>(Ljava/lang/String;)Ledu/hm/cs/rs/powergrid/datastore/Factory;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>1</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/datastore/Factory::newFactory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Plant.java</sourceFile><mutatedClass>edu.hm.cs.rs.powergrid.datastore.Plant$Type</mutatedClass><mutatedMethod>getResources</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest/><description>mutated return of Object value for edu/hm/cs/rs/powergrid/datastore/Plant$Type::getResources to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
